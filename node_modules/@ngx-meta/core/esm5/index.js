import { NgModule, Optional, SkipSelf } from '@angular/core';
import { MetaGuard } from './src/meta.guard';
import { MetaLoader, MetaStaticLoader } from './src/meta.loader';
import { MetaService } from './src/meta.service';
export * from './src/models/page-title-positioning';
export * from './src/meta.guard';
export * from './src/meta.loader';
export * from './src/meta.service';
export function metaFactory() {
    return new MetaStaticLoader();
}
var MetaModule = (function () {
    function MetaModule(parentModule) {
        if (parentModule) {
            throw new Error('MetaModule already loaded; import in root module only.');
        }
    }
    MetaModule.forRoot = function (configuredProvider) {
        if (configuredProvider === void 0) { configuredProvider = {
            provide: MetaLoader,
            useFactory: metaFactory
        }; }
        return {
            ngModule: MetaModule,
            providers: [configuredProvider, MetaGuard, MetaService]
        };
    };
    MetaModule.decorators = [
        { type: NgModule }
    ];
    MetaModule.ctorParameters = function () { return [
        { type: MetaModule, decorators: [{ type: Optional }, { type: SkipSelf }] }
    ]; };
    return MetaModule;
}());
export { MetaModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LW1ldGEvY29yZS8iLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHakQsY0FBYyxxQ0FBcUMsQ0FBQztBQUNwRCxjQUFjLGtCQUFrQixDQUFDO0FBQ2pDLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxvQkFBb0IsQ0FBQztBQUluQyxNQUFNLFVBQVUsV0FBVztJQUN6QixPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztBQUNoQyxDQUFDO0FBRUQ7SUFjRSxvQkFBb0MsWUFBeUI7UUFDM0QsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FBQyx3REFBd0QsQ0FBQyxDQUFDO1NBQzNFO0lBQ0gsQ0FBQztJQWhCTSxrQkFBTyxHQUFkLFVBQ0Usa0JBR0M7UUFIRCxtQ0FBQSxFQUFBO1lBQ0UsT0FBTyxFQUFFLFVBQVU7WUFDbkIsVUFBVSxFQUFFLFdBQVc7U0FDeEI7UUFFRCxPQUFPO1lBQ0wsUUFBUSxFQUFFLFVBQVU7WUFDcEIsU0FBUyxFQUFFLENBQUMsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLFdBQVcsQ0FBQztTQUN4RCxDQUFDO0lBQ0osQ0FBQzs7Z0JBWkYsUUFBUTs7O2dCQWM0QyxVQUFVLHVCQUFoRCxRQUFRLFlBQUksUUFBUTs7SUFLbkMsaUJBQUM7Q0FBQSxBQW5CRCxJQW1CQztTQWxCWSxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgTWV0YUd1YXJkIH0gZnJvbSAnLi9zcmMvbWV0YS5ndWFyZCc7XHJcbmltcG9ydCB7IE1ldGFMb2FkZXIsIE1ldGFTdGF0aWNMb2FkZXIgfSBmcm9tICcuL3NyYy9tZXRhLmxvYWRlcic7XHJcbmltcG9ydCB7IE1ldGFTZXJ2aWNlIH0gZnJvbSAnLi9zcmMvbWV0YS5zZXJ2aWNlJztcclxuXHJcbmV4cG9ydCAqIGZyb20gJy4vc3JjL21vZGVscy9tZXRhLXNldHRpbmdzJztcclxuZXhwb3J0ICogZnJvbSAnLi9zcmMvbW9kZWxzL3BhZ2UtdGl0bGUtcG9zaXRpb25pbmcnO1xyXG5leHBvcnQgKiBmcm9tICcuL3NyYy9tZXRhLmd1YXJkJztcclxuZXhwb3J0ICogZnJvbSAnLi9zcmMvbWV0YS5sb2FkZXInO1xyXG5leHBvcnQgKiBmcm9tICcuL3NyYy9tZXRhLnNlcnZpY2UnO1xyXG5cclxuLy8gZm9yIEFvVCBjb21waWxhdGlvblxyXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmVcclxuZXhwb3J0IGZ1bmN0aW9uIG1ldGFGYWN0b3J5KCk6IE1ldGFMb2FkZXIge1xyXG4gIHJldHVybiBuZXcgTWV0YVN0YXRpY0xvYWRlcigpO1xyXG59XHJcblxyXG5ATmdNb2R1bGUoKVxyXG5leHBvcnQgY2xhc3MgTWV0YU1vZHVsZSB7XHJcbiAgc3RhdGljIGZvclJvb3QoXHJcbiAgICBjb25maWd1cmVkUHJvdmlkZXI6IGFueSA9IHtcclxuICAgICAgcHJvdmlkZTogTWV0YUxvYWRlcixcclxuICAgICAgdXNlRmFjdG9yeTogbWV0YUZhY3RvcnlcclxuICAgIH1cclxuICApOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBNZXRhTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFtjb25maWd1cmVkUHJvdmlkZXIsIE1ldGFHdWFyZCwgTWV0YVNlcnZpY2VdXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgQFNraXBTZWxmKCkgcGFyZW50TW9kdWxlPzogTWV0YU1vZHVsZSkge1xyXG4gICAgaWYgKHBhcmVudE1vZHVsZSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ01ldGFNb2R1bGUgYWxyZWFkeSBsb2FkZWQ7IGltcG9ydCBpbiByb290IG1vZHVsZSBvbmx5LicpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=