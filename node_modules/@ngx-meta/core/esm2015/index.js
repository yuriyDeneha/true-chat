import { NgModule, Optional, SkipSelf } from '@angular/core';
import { MetaGuard } from './src/meta.guard';
import { MetaLoader, MetaStaticLoader } from './src/meta.loader';
import { MetaService } from './src/meta.service';
export * from './src/models/page-title-positioning';
export * from './src/meta.guard';
export * from './src/meta.loader';
export * from './src/meta.service';
export function metaFactory() {
    return new MetaStaticLoader();
}
export class MetaModule {
    constructor(parentModule) {
        if (parentModule) {
            throw new Error('MetaModule already loaded; import in root module only.');
        }
    }
    static forRoot(configuredProvider = {
        provide: MetaLoader,
        useFactory: metaFactory
    }) {
        return {
            ngModule: MetaModule,
            providers: [configuredProvider, MetaGuard, MetaService]
        };
    }
}
MetaModule.decorators = [
    { type: NgModule }
];
MetaModule.ctorParameters = () => [
    { type: MetaModule, decorators: [{ type: Optional }, { type: SkipSelf }] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LW1ldGEvY29yZS8iLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHakQsY0FBYyxxQ0FBcUMsQ0FBQztBQUNwRCxjQUFjLGtCQUFrQixDQUFDO0FBQ2pDLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxvQkFBb0IsQ0FBQztBQUluQyxNQUFNLFVBQVUsV0FBVztJQUN6QixPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztBQUNoQyxDQUFDO0FBR0QsTUFBTSxPQUFPLFVBQVU7SUFhckIsWUFBb0MsWUFBeUI7UUFDM0QsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FBQyx3REFBd0QsQ0FBQyxDQUFDO1NBQzNFO0lBQ0gsQ0FBQztJQWhCRCxNQUFNLENBQUMsT0FBTyxDQUNaLHFCQUEwQjtRQUN4QixPQUFPLEVBQUUsVUFBVTtRQUNuQixVQUFVLEVBQUUsV0FBVztLQUN4QjtRQUVELE9BQU87WUFDTCxRQUFRLEVBQUUsVUFBVTtZQUNwQixTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDO1NBQ3hELENBQUM7SUFDSixDQUFDOzs7WUFaRixRQUFROzs7WUFjNEMsVUFBVSx1QkFBaEQsUUFBUSxZQUFJLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSwgT3B0aW9uYWwsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBNZXRhR3VhcmQgfSBmcm9tICcuL3NyYy9tZXRhLmd1YXJkJztcclxuaW1wb3J0IHsgTWV0YUxvYWRlciwgTWV0YVN0YXRpY0xvYWRlciB9IGZyb20gJy4vc3JjL21ldGEubG9hZGVyJztcclxuaW1wb3J0IHsgTWV0YVNlcnZpY2UgfSBmcm9tICcuL3NyYy9tZXRhLnNlcnZpY2UnO1xyXG5cclxuZXhwb3J0ICogZnJvbSAnLi9zcmMvbW9kZWxzL21ldGEtc2V0dGluZ3MnO1xyXG5leHBvcnQgKiBmcm9tICcuL3NyYy9tb2RlbHMvcGFnZS10aXRsZS1wb3NpdGlvbmluZyc7XHJcbmV4cG9ydCAqIGZyb20gJy4vc3JjL21ldGEuZ3VhcmQnO1xyXG5leHBvcnQgKiBmcm9tICcuL3NyYy9tZXRhLmxvYWRlcic7XHJcbmV4cG9ydCAqIGZyb20gJy4vc3JjL21ldGEuc2VydmljZSc7XHJcblxyXG4vLyBmb3IgQW9UIGNvbXBpbGF0aW9uXHJcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZVxyXG5leHBvcnQgZnVuY3Rpb24gbWV0YUZhY3RvcnkoKTogTWV0YUxvYWRlciB7XHJcbiAgcmV0dXJuIG5ldyBNZXRhU3RhdGljTG9hZGVyKCk7XHJcbn1cclxuXHJcbkBOZ01vZHVsZSgpXHJcbmV4cG9ydCBjbGFzcyBNZXRhTW9kdWxlIHtcclxuICBzdGF0aWMgZm9yUm9vdChcclxuICAgIGNvbmZpZ3VyZWRQcm92aWRlcjogYW55ID0ge1xyXG4gICAgICBwcm92aWRlOiBNZXRhTG9hZGVyLFxyXG4gICAgICB1c2VGYWN0b3J5OiBtZXRhRmFjdG9yeVxyXG4gICAgfVxyXG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IE1ldGFNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW2NvbmZpZ3VyZWRQcm92aWRlciwgTWV0YUd1YXJkLCBNZXRhU2VydmljZV1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBAU2tpcFNlbGYoKSBwYXJlbnRNb2R1bGU/OiBNZXRhTW9kdWxlKSB7XHJcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignTWV0YU1vZHVsZSBhbHJlYWR5IGxvYWRlZDsgaW1wb3J0IGluIHJvb3QgbW9kdWxlIG9ubHkuJyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==