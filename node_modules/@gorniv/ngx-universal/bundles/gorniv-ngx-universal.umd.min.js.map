{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://@gorniv/ngx-universal/transfer-http/transfer-http.service.ts","ng://@gorniv/ngx-universal/transfer-http/transfer-http.module.ts","ng://@gorniv/ngx-universal/cookie/utils.ts","ng://@gorniv/ngx-universal/cookie/cookie-options-provider.ts","ng://@gorniv/ngx-universal/cookie/cookie.service.ts","ng://@gorniv/ngx-universal/cookie/cookie-backend.service.ts","ng://@gorniv/ngx-universal/cookie/cookie.factory.ts","ng://@gorniv/ngx-universal/cookie/cookie.module.ts","ng://@gorniv/ngx-universal/link/link.service.ts","ng://@gorniv/ngx-universal/link/link.module.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","TransferHttpService","transferState","httpClient","platformId","this","prototype","request","method","uri","options","_this","getData","url","get","_method","post","body","getPostData","put","_body","delete","patch","head","callback","tempKey","JSON","stringify","key","makeStateKey","resolveData","e","pipe","tap","data","isPlatformBrowser","isPlatformServer","setCache","getFromCache","Error","remove","from","Promise","resolve","set","Injectable","TransferState","HttpClient","decorators","type","Inject","args","PLATFORM_ID","TransferHttpModule","NgModule","providers","isBlank","obj","undefined","isPresent","isString","mergeOptions","oldOptions","newOptions","path","domain","expires","secure","httpOnly","storeUnencoded","safeDecodeURIComponent","str","decodeURIComponent","safeJsonParse","parse","COOKIE_OPTIONS","InjectionToken","CookieOptionsProvider","_injector","defaultOptions","APP_BASE_HREF","_options","defineProperty","Injector","CookieService","_optionsProvider","document","cookie","val","_cookieReader","getObject","value","getAll","_cookieWriter","putObject","removeAll","cookies","keys","forEach","cookieArray","i","index","name","lastCookies","lastCookieString","currentCookieString","cookieString","split","length","indexOf","substring","that","_buildCookieString","opts","Date","cookieValue","encodeURIComponent","toUTCString","cookieLength","console","log","CookieBackendService","response","_super","call","__","constructor","create","tslib_1.__extends","headers","findKey","newCookie","map","keyItem","join","REQUEST","RESPONSE","cookieServiceFactory","cookieOptionsProvider","CookieModule","forRoot","ngModule","provide","useValue","useFactory","deps","forChild","LinkService","rendererFactory","addTag","tag","forceCreation","renderer_1","createRenderer","id","encapsulation","ViewEncapsulation","None","styles","link_1","createElement","_parseSelector","prop","setAttribute","appendChild","error","attr","rel","providedIn","RendererFactory2","DOCUMENT","LinkModule","imports","CommonModule"],"mappings":"ktBAgBA,IAAIA,EAAgBC,OAAOC,gBACtB,CAAEC,UAAW,cAAgBC,OAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIC,KAAKD,EAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,KClBzE,IAAAE,EAAA,WASE,SAAAA,EACYC,EACFC,EACqBC,GAFnBC,KAAAH,cAAAA,EACFG,KAAAF,WAAAA,EACqBE,KAAAD,WAAAA,EA0VjC,OAvVEH,EAAAK,UAAAC,QAAA,SACEC,EACAC,EACAC,GAHF,IAAAC,EAAAN,KAsBE,OAAOA,KAAKO,QAAWJ,EAAQC,EAAKC,EAAO,SAAGF,EAAgBK,EAAaH,GACzE,OAAOC,EAAKR,WAAWI,QAAWC,EAAQK,EAAKH,MAOnDT,EAAAK,UAAAQ,IAAA,SACED,EACAH,GAFF,IAAAC,EAAAN,KAoBE,OAAOA,KAAKO,QAAW,MAAOC,EAAKH,EAAO,SAAGK,EAAiBF,EAAaH,GACzE,OAAOC,EAAKR,WAAWW,IAAOD,EAAKH,MAOvCT,EAAAK,UAAAU,KAAA,SACEH,EACAI,EACAP,GAHF,IAAAC,EAAAN,KAqBE,OAAOA,KAAKa,YACV,OACAL,EACAI,EACAP,EAAO,SAENK,EAAiBF,EAAaI,EAAWP,GACxC,OAAOC,EAAKR,WAAWa,KAAQH,EAAKI,EAAMP,MAQhDT,EAAAK,UAAAa,IAAA,SACEN,EACAO,EACAV,GAHF,IAAAC,EAAAN,KAqBE,OAAOA,KAAKa,YACV,MACAL,EACAO,EACAV,EAAO,SACNK,EAAiBF,EAAaO,EAAYV,GACzC,OAAOC,EAAKR,WAAWgB,IAAON,EAAKO,EAAOV,MAQhDT,EAAAK,UAAAe,UAAA,SACER,EACAH,GAFF,IAAAC,EAAAN,KAoBE,OAAOA,KAAKO,QAAW,SAAUC,EAAKH,EAAO,SAAGK,EAAiBF,EAAaH,GAC5E,OAAOC,EAAKR,WAAWkB,UAAUR,EAAKH,MAO1CT,EAAAK,UAAAgB,MAAA,SACET,EACAI,EACAP,GAHF,IAAAC,EAAAN,KAqBE,OAAOA,KAAKa,YACV,QACAL,EACAI,EACAP,EAAO,SAENK,EAAiBF,EAAaI,EAAWP,GACxC,OAAOC,EAAKR,WAAWmB,MAAST,EAAKI,EAAMP,MAQjDT,EAAAK,UAAAiB,KAAA,SACEV,EACAH,GAFF,IAAAC,EAAAN,KAoBE,OAAOA,KAAKO,QAAW,OAAQC,EAAKH,EAAO,SAAGK,EAAiBF,EAAaH,GAC1E,OAAOC,EAAKR,WAAWoB,KAAQV,EAAKH,MAOxCT,EAAAK,UAAAI,QAAA,SACEG,EACAH,GAFF,IAAAC,EAAAN,KAoBE,OAAOA,KAAKO,QACV,UACAC,EACAH,EAAO,SAENK,EAAiBF,EAAaH,GAC7B,OAAOC,EAAKR,WAAWO,QAAWG,EAAKH,MAMrCT,EAAAK,UAAAM,QAAR,SACEJ,EACAC,EACAC,EACAc,GAJF,IAAAb,EAAAN,KAMMQ,EAAMJ,EAES,iBAARA,IACTI,EAAMJ,EAAII,SAGNY,EAAUZ,GAAOH,EAAUgB,KAAKC,UAAUjB,GAAW,IACrDkB,EAAMC,EAAAA,aAAgBJ,GAC5B,IACE,OAAOpB,KAAKyB,YAAeF,GAC3B,MAAOG,GACP,OAAOP,EAAShB,EAAQC,EAAKC,GAASsB,KACpCC,EAAAA,IAAG,SAAEC,GACCC,EAAAA,kBAAkBxB,EAAKP,YAIvBgC,EAAAA,iBAAiBzB,EAAKP,aACxBO,EAAK0B,SAAYT,EAAKM,QAOxBjC,EAAAK,UAAAY,YAAR,SACEH,EACAN,EACAQ,EACAP,EACAc,GALF,IAAAb,EAAAN,KAOMQ,EAAMJ,EAES,iBAARA,IACTI,EAAMJ,EAAII,SAGNY,EACJZ,GAAOI,EAAOS,KAAKC,UAAUV,GAAQ,KAAOP,EAAUgB,KAAKC,UAAUjB,GAAW,IAC5EkB,EAAMC,EAAAA,aAAgBJ,GAE5B,IACE,OAAOpB,KAAKyB,YAAeF,GAC3B,MAAOG,GACP,OAAOP,EAAST,EAASN,EAAKQ,EAAMP,GAASsB,KAC3CC,EAAAA,IAAG,SAAEC,GACCC,EAAAA,kBAAkBxB,EAAKP,YAIvBgC,EAAAA,iBAAiBzB,EAAKP,aACxBO,EAAK0B,SAAYT,EAAKM,QAOxBjC,EAAAK,UAAAwB,YAAR,SAAuBF,OACfM,EAAO7B,KAAKiC,aAAgBV,GAElC,IAAKM,EACH,MAAM,IAAIK,MAWZ,OARIJ,EAAAA,kBAAkB9B,KAAKD,aAEzBC,KAAKH,cAAcsC,OAAOZ,GAExBQ,EAAAA,iBAAiB/B,KAAKD,YAInBqC,EAAAA,KAAKC,QAAQC,QAAWT,KAGzBjC,EAAAK,UAAA+B,SAAR,SAAoBT,EAAkBM,GACpC,OAAO7B,KAAKH,cAAc0C,IAAOhB,EAAKM,IAGhCjC,EAAAK,UAAAgC,aAAR,SAAwBV,GACtB,OAAOvB,KAAKH,cAAcY,IAAOc,EAAK,2BA7VzCiB,EAAAA,sDALQC,EAAAA,qBADAC,EAAAA,kBAWoCtD,OAAMuD,WAAA,CAAA,CAAAC,KAA9CC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,kBA0VZnD,EAtWA,GCAAoD,EAAA,WAIA,SAAAA,KAGiC,2BAHhCC,EAAAA,SAAQH,KAAA,CAAC,CACRI,UAAW,CAACtD,OAEmBoD,EAPjC,GCEA,SAAgBG,EAAQC,GACtB,OAAOA,IAAQC,WAAqB,OAARD,EAG9B,SAAgBE,EAAUF,GACxB,OAAOA,IAAQC,WAAqB,OAARD,EAG9B,SAAgBG,EAASH,GACvB,MAAsB,iBAARA,EAGhB,SAAgBI,EAAaC,EAA2BC,GACtD,OAAKA,EAGE,CACLC,KAAML,EAAUI,EAAWC,MAAQD,EAAWC,KAAOF,EAAWE,KAChEC,OAAQN,EAAUI,EAAWE,QAAUF,EAAWE,OAASH,EAAWG,OACtEC,QAASP,EAAUI,EAAWG,SAAWH,EAAWG,QAAUJ,EAAWI,QACzEC,OAAQR,EAAUI,EAAWI,QAAUJ,EAAWI,OAASL,EAAWK,OACtEC,SAAUT,EAAUI,EAAWK,UAAYL,EAAWK,SAAWN,EAAWM,SAC5EC,eAAgBV,EAAUI,EAAWM,gBAAkBN,EAAWM,eAAiBP,EAAWO,gBARvFP,EAYX,SAAgBQ,EAAuBC,GACrC,IACE,OAAOC,mBAAmBD,GAC1B,MAAOxC,GACP,OAAOwC,GAIX,SAAgBE,EAAcF,GAC5B,IACE,OAAO7C,KAAKgD,MAAMH,GAClB,MAAOxC,GACP,OAAOwC,GClCX,IAAaI,EAAiB,IAAIC,EAAAA,eAA8B,kBAEhEC,EAAA,WAME,SAAAA,EAAoCnE,EAChBoE,QADR,IAAApE,IAAAA,EAAA,IACQL,KAAAyE,UAAAA,EAClBzE,KAAK0E,eAAiB,CACpBf,KAAM3D,KAAKyE,UAAUhE,IAAIkE,EAAAA,cAAe,KACxCf,OAAQ,KACRC,QAAS,KACTC,QAAQ,EACRC,UAAU,GAEZ/D,KAAK4E,SAAWpB,EAAaxD,KAAK0E,eAAgBrE,GAMtD,OAHEjB,OAAAyF,eAAIL,EAAAvE,UAAA,UAAO,KAAX,WACE,OAAOD,KAAK4E,8DAnBfpC,EAAAA,kFAMcK,EAAAA,OAAMC,KAAA,CAACwB,YAduBQ,EAAAA,YA6B7CN,EArBA,GCRAO,EAAA,WAkCE,SAAAA,EAAoBC,GAAAhF,KAAAgF,iBAAAA,EAClBhF,KAAKK,QAAUL,KAAKgF,iBAAiB3E,QA8JzC,OAvKEjB,OAAAyF,eAAcE,EAAA9E,UAAA,eAAY,KAA1B,WACE,OAAOgF,SAASC,QAAU,QAG5B,SAA2BC,GACzBF,SAASC,OAASC,mCAgBpBJ,EAAA9E,UAAAQ,IAAA,SAAIc,GACF,OAAavB,KAAKoF,gBAAiB7D,IAYrCwD,EAAA9E,UAAAoF,UAAA,SAAU9D,OACF+D,EAAQtF,KAAKS,IAAIc,GACvB,OAAO+D,EAAQlB,EAAckB,GAASA,GAWxCP,EAAA9E,UAAAsF,OAAA,WACE,OAAYvF,KAAKoF,iBAanBL,EAAA9E,UAAAa,IAAA,SAAIS,EAAa+D,EAAejF,GAC9BL,KAAKwF,eAALxF,CAAqBuB,EAAK+D,EAAOjF,IAanC0E,EAAA9E,UAAAwF,UAAA,SAAUlE,EAAa+D,EAAejF,GACpCL,KAAKc,IAAIS,EAAKF,KAAKC,UAAUgE,GAAQjF,IAYvC0E,EAAA9E,UAAAkC,OAAA,SAAOZ,EAAalB,GAClBL,KAAKwF,eAALxF,CAAqBuB,EAAK8B,UAAWhD,IASvC0E,EAAA9E,UAAAyF,UAAA,SAAUrF,GAAV,IAAAC,EAAAN,KACQ2F,EAAU3F,KAAKuF,SACrBnG,OAAOwG,KAAKD,GAASE,QAAO,SAACtE,GAC3BjB,EAAK6B,OAAOZ,EAAKlB,MAIb0E,EAAA9E,UAAAmF,cAAR,eAGMU,EAAuBZ,EAAgBa,EAAWC,EAAeC,EAFjEC,EAAc,GACdC,EAAmB,GAEjBC,EAAsBpG,KAAKqG,aACjC,GAAID,IAAwBD,EAI1B,IAFAL,GADAK,EAAmBC,GACYE,MAAM,MACrCJ,EAAc,GACTH,EAAI,EAAGA,EAAID,EAAYS,OAAQR,KAElCC,GADAd,EAASY,EAAYC,IACNS,QAAQ,MACX,GAKNrD,EAAQ,EAJZ8C,EAAOhC,EAAuBiB,EAAOuB,UAAU,EAAGT,QAKhD,EAAmBC,GAAQhC,EAAuBiB,EAAOuB,UAAUT,EAAQ,KAKnF,OAAOE,GAGDnB,EAAA9E,UAAAuF,cAAR,eACQkB,EAAO1G,KAEb,OAAA,SAAiBiG,EAAcX,EAAejF,GAC5CqG,EAAKL,aAAeK,EAAKC,mBAAmBV,EAAMX,EAAOjF,KAIrD0E,EAAA9E,UAAA0G,mBAAR,SAA2BV,EAAcX,EAAejF,OAChDuG,EAAsBpD,EAAaxD,KAAKK,QAASA,GACnDwD,EAAe+C,EAAK/C,QACpBV,EAAQmC,KACVzB,EAAU,gCACVyB,EAAQ,IAEN/B,EAASM,KACXA,EAAU,IAAIgD,KAAKhD,QAEfiD,EAAcF,EAAK5C,eAAiBsB,EAAQyB,mBAAmBzB,GACjEpB,EAAM6C,mBAAmBd,GAAQ,IAAMa,EAC3C5C,GAAO0C,EAAKjD,KAAO,SAAWiD,EAAKjD,KAAO,GAC1CO,GAAO0C,EAAKhD,OAAS,WAAagD,EAAKhD,OAAS,GAChDM,GAAOL,EAAU,YAAcA,EAAQmD,cAAgB,GACvD9C,GAAO0C,EAAK9C,OAAS,UAAY,OAO3BmD,GANN/C,GAAO0C,EAAK7C,SAAW,aAAe,IAMbwC,OAAS,EAIlC,OAHIU,EAAe,MACjBC,QAAQC,IAAI,WAAYlB,EAAI,8DAA+DgB,EAAY,mBAElG/C,uBA1KV1B,EAAAA,sDAnBQgC,KA+LTO,EAjMA,iBCSE,SAAAqC,EAC2BlH,EACCmH,EAC1BrC,GAHF,IAAA1E,EAKEgH,EAAAC,KAAAvH,KAAMgF,IAAiBhF,YAJEM,EAAAJ,QAAAA,EACCI,EAAA+G,SAAAA,IAiD9B,ONxCO,SAAmB7H,EAAGC,GAEzB,SAAS+H,IAAOxH,KAAKyH,YAAcjI,EADnCL,EAAcK,EAAGC,GAEjBD,EAAES,UAAkB,OAANR,EAAaL,OAAOsI,OAAOjI,IAAM+H,EAAGvH,UAAYR,EAAEQ,UAAW,IAAIuH,GMfzCG,CAAAA,EAAAA,GASxCvI,OAAAyF,eAAcuC,EAAAnH,UAAA,eAAY,KAA1B,WACE,OAAOD,KAAKE,QAAQgF,QAAUlF,KAAKE,QAAQ0H,QAAgB,QAAK,QAGlE,SAA2BzC,GACzBnF,KAAKE,QAAQgF,OAASC,EACtBnF,KAAKqH,SAASnC,OAASC,mCAGzBiC,EAAAnH,UAAAa,IAAA,SAAIS,EAAa+D,EAAejF,GAAhC,IAAAC,EAAAN,UAAgC,IAAAK,IAAAA,EAAA,QAC1BwH,GAAU,EACVC,EAAY1I,OAAOwG,KAAK5F,KAAKuF,UAE9BwC,IAAG,SAAEC,GACJ,OAAIA,IAAYzG,GACdsG,GAAU,EACAtG,EAAG,IAAI+D,GAET0C,EAAO,IAAI1H,EAAKG,IAAIuH,KAE/BC,KAAK,MACHJ,IACHC,GAAa,KAAKvG,EAAG,IAAI+D,EAAK,KAEhCtF,KAAKE,QAAQ0H,QAAQ1C,OAAS4C,EAE9B9H,KAAKqG,aAAeyB,GAGtBV,EAAAnH,UAAAkC,OAAA,SAAOZ,EAAalB,GAApB,IAAAC,EAAAN,KACQ8H,EAAY1I,OAAOwG,KAAK5F,KAAKuF,UAEhCwC,IAAG,SAAEC,GACJ,OAAIA,IAAYzG,EACP,GAECyG,EAAO,IAAI1H,EAAKG,IAAIuH,KAE/BC,KAAK,MACRjI,KAAKE,QAAQ0H,QAAQ1C,OAAS4C,EAE9B9H,KAAKqG,aAAeyB,uBAnDvBtF,EAAAA,kFAGIK,EAAAA,OAAMC,KAAA,CAACoF,EAAAA,8CACPrF,EAAAA,OAAMC,KAAA,CAACqF,EAAAA,mBAPH3D,KAwDT4C,GApD0CrC,GCL1C,SAAgBqD,EAAqBC,GACnC,OAAO,IAAItD,EAAcsD,GCJ3B,IAAAC,EAAA,WAOA,SAAAA,KA6BA,OAtBSA,EAAAC,QAAP,SAAelI,GACb,YADa,IAAAA,IAAAA,EAAA,IACN,CACLmI,SAAUF,EACVpF,UAAW,CACT,CAACuF,QAASnE,EAAgBoE,SAAUrI,GACpC,CAACoI,QAAS1D,EAAe4D,WAAYP,EAAsBQ,KAAM,CAACpE,OAQjE8D,EAAAO,SAAP,SAAgBxI,GACd,YADc,IAAAA,IAAAA,EAAA,IACP,CACLmI,SAAUF,EACVpF,UAAW,CACT,CAACuF,QAASnE,EAAgBoE,SAAUrI,GACpC,CAACoI,QAAS1D,EAAe4D,WAAYP,EAAsBQ,KAAM,CAACpE,2BAzBzEvB,EAAAA,SAAQH,KAAA,CAAC,CACRI,UAAW,CAACsB,OA4Bd8D,EApCA,gBCmBI,SAAAQ,EACYC,EACkB9D,GADlBjF,KAAA+I,gBAAAA,EACkB/I,KAAAiF,SAAAA,EA0ClC,OAnCI6D,EAAA7I,UAAA+I,OAAA,SAAOC,EAAqBC,GAExB,QACUC,EAAWnJ,KAAK+I,gBAAgBK,eAAepJ,KAAKiF,SAAU,CAChEoE,GAAI,KACJC,cAAeC,EAAAA,kBAAkBC,KACjCC,OAAQ,GACR5H,KAAM,KAGJ6H,EAAOP,EAASQ,cAAc,QAC9BzI,EAAOlB,KAAKiF,SAAS/D,KACVlB,KAAK4J,eAAeX,GAErC,GAAa,OAAT/H,EACA,MAAM,IAAIgB,MAAM,qCAGpB9C,OAAOwG,KAAKqD,GAAKpD,QAAO,SAAEgE,GACtB,OAAOV,EAASW,aAAaJ,EAAMG,EAAMZ,EAAIY,MAIjDV,EAASY,YAAY7I,EAAMwI,GAE7B,MAAOhI,GACLwF,QAAQ8C,MAAM,8BAA+BtI,KAI7CoH,EAAA7I,UAAA2J,eAAR,SAAuBX,OAEbgB,EAAehB,EAAIiB,IAAM,MAAQ,WACvC,OAAUD,EAAI,KAAKhB,EAAIgB,GAAK,yBAxDnCzH,EAAAA,WAAUM,KAAA,CAAC,CACVqH,WAAY,gBAUb3H,EAAAA,sDAd8B4H,EAAAA,oDAmBtBvH,EAAAA,OAAMC,KAAA,CAACuH,EAAAA,eA0ChBvB,KC/DAwB,EAAA,WAIA,SAAAA,KAM0B,2BANzBrH,EAAAA,SAAQH,KAAA,CAAC,CACRyH,QAAS,CACPC,EAAAA,cAEFtH,UAAW,CAAC4F,OAEYwB,EAV1B","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { TransferState, StateKey, makeStateKey } from '@angular/platform-browser';\nimport { Observable, from } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class TransferHttpService {\n  constructor(\n    protected transferState: TransferState,\n    private httpClient: HttpClient,\n    @Inject(PLATFORM_ID) private platformId: Object,\n  ) {}\n\n  request<T>(\n    method: string,\n    uri: string | Request,\n    options?: {\n      body?: any;\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      observe?: 'response';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      responseType?: 'json';\n      withCredentials?: boolean;\n    },\n  ): Observable<T> {\n    // tslint:disable-next-line:no-shadowed-variable\n    return this.getData<T>(method, uri, options, (method: string, url: string, options: any) => {\n      return this.httpClient.request<T>(method, url, options);\n    });\n  }\n\n  /**\n   * Performs a request with `get` http method.\n   */\n  get<T>(\n    url: string,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      observe?: 'response';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    },\n  ): Observable<T> {\n    // tslint:disable-next-line:no-shadowed-variable\n    return this.getData<T>('get', url, options, (_method: string, url: string, options: any) => {\n      return this.httpClient.get<T>(url, options);\n    });\n  }\n\n  /**\n   * Performs a request with `post` http method.\n   */\n  post<T>(\n    url: string,\n    body: any,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      observe?: 'response';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    },\n  ): Observable<T> {\n    // tslint:disable-next-line:no-shadowed-variable\n    return this.getPostData<T>(\n      'post',\n      url,\n      body,\n      options,\n      // tslint:disable-next-line:no-shadowed-variable\n      (_method: string, url: string, body: any, options: any) => {\n        return this.httpClient.post<T>(url, body, options);\n      },\n    );\n  }\n\n  /**\n   * Performs a request with `put` http method.\n   */\n  put<T>(\n    url: string,\n    _body: any,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      observe?: 'body';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    },\n  ): Observable<T> {\n    // tslint:disable-next-line:no-shadowed-variable\n    return this.getPostData<T>(\n      'put',\n      url,\n      _body,\n      options,\n      (_method: string, url: string, _body: any, options: any) => {\n        return this.httpClient.put<T>(url, _body, options);\n      },\n    );\n  }\n\n  /**\n   * Performs a request with `delete` http method.\n   */\n  delete<T>(\n    url: string,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      observe?: 'response';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    },\n  ): Observable<T> {\n    // tslint:disable-next-line:no-shadowed-variable\n    return this.getData<T>('delete', url, options, (_method: string, url: string, options: any) => {\n      return this.httpClient.delete<T>(url, options);\n    });\n  }\n\n  /**\n   * Performs a request with `patch` http method.\n   */\n  patch<T>(\n    url: string,\n    body: any,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      observe?: 'response';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    },\n  ): Observable<T> {\n    // tslint:disable-next-line:no-shadowed-variable\n    return this.getPostData<T>(\n      'patch',\n      url,\n      body,\n      options,\n      // tslint:disable-next-line:no-shadowed-variable\n      (_method: string, url: string, body: any, options: any): Observable<any> => {\n        return this.httpClient.patch<T>(url, body, options);\n      },\n    );\n  }\n\n  /**\n   * Performs a request with `head` http method.\n   */\n  head<T>(\n    url: string,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      observe?: 'response';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    },\n  ): Observable<T> {\n    // tslint:disable-next-line:no-shadowed-variable\n    return this.getData<T>('head', url, options, (_method: string, url: string, options: any) => {\n      return this.httpClient.head<T>(url, options);\n    });\n  }\n\n  /**\n   * Performs a request with `options` http method.\n   */\n  options<T>(\n    url: string,\n    options?: {\n      headers?:\n        | HttpHeaders\n        | {\n            [header: string]: string | string[];\n          };\n      observe?: 'response';\n      params?:\n        | HttpParams\n        | {\n            [param: string]: string | string[];\n          };\n      reportProgress?: boolean;\n      responseType?: 'json';\n      withCredentials?: boolean;\n    },\n  ): Observable<T> {\n    // tslint:disable-next-line:no-shadowed-variable\n    return this.getData<T>(\n      'options',\n      url,\n      options,\n      // tslint:disable-next-line:no-shadowed-variable\n      (_method: string, url: string, options: any) => {\n        return this.httpClient.options<T>(url, options);\n      },\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  private getData<T>(\n    method: string,\n    uri: string | Request,\n    options: any,\n    callback: (method: string, uri: string | Request, options: any) => Observable<any>,\n  ): Observable<T> {\n    let url = uri;\n\n    if (typeof uri !== 'string') {\n      url = uri.url;\n    }\n\n    const tempKey = url + (options ? JSON.stringify(options) : '');\n    const key = makeStateKey<T>(tempKey);\n    try {\n      return this.resolveData<T>(key);\n    } catch (e) {\n      return callback(method, uri, options).pipe(\n        tap((data: T) => {\n          if (isPlatformBrowser(this.platformId)) {\n            // Client only code.\n            // nothing;\n          }\n          if (isPlatformServer(this.platformId)) {\n            this.setCache<T>(key, data);\n          }\n        }),\n      );\n    }\n  }\n\n  private getPostData<T>(\n    _method: string,\n    uri: string | Request,\n    body: any,\n    options: any,\n    callback: (method: string, uri: string | Request, body: any, options: any) => Observable<any>,\n  ): Observable<T> {\n    let url = uri;\n\n    if (typeof uri !== 'string') {\n      url = uri.url;\n    }\n\n    const tempKey =\n      url + (body ? JSON.stringify(body) : '') + (options ? JSON.stringify(options) : '');\n    const key = makeStateKey<T>(tempKey);\n\n    try {\n      return this.resolveData<T>(key);\n    } catch (e) {\n      return callback(_method, uri, body, options).pipe(\n        tap((data: T) => {\n          if (isPlatformBrowser(this.platformId)) {\n            // Client only code.\n            // nothing;\n          }\n          if (isPlatformServer(this.platformId)) {\n            this.setCache<T>(key, data);\n          }\n        }),\n      );\n    }\n  }\n\n  private resolveData<T>(key: StateKey<T>): Observable<T> {\n    const data = this.getFromCache<T>(key);\n\n    if (!data) {\n      throw new Error();\n    }\n\n    if (isPlatformBrowser(this.platformId)) {\n      // Client only code.\n      this.transferState.remove(key);\n    }\n    if (isPlatformServer(this.platformId)) {\n      // Server only code.\n    }\n\n    return from(Promise.resolve<T>(data));\n  }\n\n  private setCache<T>(key: StateKey<T>, data: T): void {\n    return this.transferState.set<T>(key, data);\n  }\n\n  private getFromCache<T>(key: StateKey<T>): T {\n    return this.transferState.get<T>(key, null);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { TransferHttpService } from './transfer-http.service';\n\n@NgModule({\n  providers: [TransferHttpService],\n})\nexport class TransferHttpModule {}\n","import { CookieOptions } from './cookie-options.model';\n\nexport function isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\nexport function isPresent(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n\nexport function isString(obj: any): obj is string {\n  return typeof obj === 'string';\n}\n\nexport function mergeOptions(oldOptions: CookieOptions, newOptions?: CookieOptions): CookieOptions {\n  if (!newOptions) {\n    return oldOptions;\n  }\n  return {\n    path: isPresent(newOptions.path) ? newOptions.path : oldOptions.path,\n    domain: isPresent(newOptions.domain) ? newOptions.domain : oldOptions.domain,\n    expires: isPresent(newOptions.expires) ? newOptions.expires : oldOptions.expires,\n    secure: isPresent(newOptions.secure) ? newOptions.secure : oldOptions.secure,\n    httpOnly: isPresent(newOptions.httpOnly) ? newOptions.httpOnly : oldOptions.httpOnly,\n    storeUnencoded: isPresent(newOptions.storeUnencoded) ? newOptions.storeUnencoded : oldOptions.storeUnencoded,\n  };\n}\n\nexport function safeDecodeURIComponent(str: string) {\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\nexport function safeJsonParse(str: string) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return str;\n  }\n}\n","import { Inject, Injectable, InjectionToken, Injector } from '@angular/core';\nimport { APP_BASE_HREF } from '@angular/common';\n\nimport { CookieOptions } from './cookie-options.model';\nimport { mergeOptions } from './utils';\n\nexport const COOKIE_OPTIONS = new InjectionToken<CookieOptions>('COOKIE_OPTIONS');\n\n@Injectable()\nexport class CookieOptionsProvider {\n\n  private defaultOptions: CookieOptions;\n  private _options: CookieOptions;\n\n  constructor(@Inject(COOKIE_OPTIONS) options: CookieOptions = {},\n              private _injector: Injector) {\n    this.defaultOptions = {\n      path: this._injector.get(APP_BASE_HREF, '/'),\n      domain: null,\n      expires: null,\n      secure: false,\n      httpOnly: false\n    };\n    this._options = mergeOptions(this.defaultOptions, options);\n  }\n\n  get options(): CookieOptions {\n    return this._options;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { CookieOptionsProvider } from './cookie-options-provider';\nimport { CookieOptions } from './cookie-options.model';\nimport { isBlank, isString, mergeOptions, safeDecodeURIComponent, safeJsonParse } from './utils';\n\ndeclare interface Document {\n  cookie: string;\n}\ndeclare const document: Document;\n\nexport interface ICookieService {\n  get(key: string): string;\n  getObject(key: string): Object;\n  getAll(): Object;\n  put(key: string, value: string, options?: CookieOptions): void;\n  putObject(key: string, value: Object, options?: CookieOptions): void;\n  remove(key: string, options?: CookieOptions): void;\n  removeAll(options?: CookieOptions): void;\n}\n\n@Injectable()\nexport class CookieService implements ICookieService {\n\n  protected options: CookieOptions;\n\n  protected get cookieString(): string {\n    return document.cookie || '';\n  }\n\n  protected set cookieString(val: string) {\n    document.cookie = val;\n  }\n\n  constructor(private _optionsProvider: CookieOptionsProvider) {\n    this.options = this._optionsProvider.options;\n  }\n\n  /**\n   * @name CookieService#get\n   *\n   * @description\n   * Returns the value of given cookie key.\n   *\n   * @param key Id to use for lookup.\n   * @returns Raw cookie value.\n   */\n  get(key: string): string {\n    return (<any>this._cookieReader())[key];\n  }\n\n  /**\n   * @name CookieService#getObject\n   *\n   * @description\n   * Returns the deserialized value of given cookie key.\n   *\n   * @param key Id to use for lookup.\n   * @returns Deserialized cookie value.\n   */\n  getObject(key: string): Object {\n    const value = this.get(key);\n    return value ? safeJsonParse(value) : value;\n  }\n\n  /**\n   * @name CookieService#getAll\n   *\n   * @description\n   * Returns a key value object with all the cookies.\n   *\n   * @returns All cookies\n   */\n  getAll(): Object {\n    return <any>this._cookieReader();\n  }\n\n  /**\n   * @name CookieService#put\n   *\n   * @description\n   * Sets a value for given cookie key.\n   *\n   * @param key Id for the `value`.\n   * @param value Raw value to be stored.\n   * @param options (Optional) Options object.\n   */\n  put(key: string, value: string, options?: CookieOptions) {\n    this._cookieWriter()(key, value, options);\n  }\n\n  /**\n   * @name CookieService#putObject\n   *\n   * @description\n   * Serializes and sets a value for given cookie key.\n   *\n   * @param key Id for the `value`.\n   * @param value Value to be stored.\n   * @param options (Optional) Options object.\n   */\n  putObject(key: string, value: Object, options?: CookieOptions) {\n    this.put(key, JSON.stringify(value), options);\n  }\n\n  /**\n   * @name CookieService#remove\n   *\n   * @description\n   * Remove given cookie.\n   *\n   * @param key Id of the key-value pair to delete.\n   * @param options (Optional) Options object.\n   */\n  remove(key: string, options?: CookieOptions): void {\n    this._cookieWriter()(key, undefined, options);\n  }\n\n  /**\n   * @name CookieService#removeAll\n   *\n   * @description\n   * Remove all cookies.\n   */\n  removeAll(options?: CookieOptions): void {\n    const cookies = this.getAll();\n    Object.keys(cookies).forEach(key => {\n      this.remove(key, options);\n    });\n  }\n\n  private _cookieReader(): Object {\n    let lastCookies = {};\n    let lastCookieString = '';\n    let cookieArray: string[], cookie: string, i: number, index: number, name: string;\n    const currentCookieString = this.cookieString;\n    if (currentCookieString !== lastCookieString) {\n      lastCookieString = currentCookieString;\n      cookieArray = lastCookieString.split('; ');\n      lastCookies = {};\n      for (i = 0; i < cookieArray.length; i++) {\n        cookie = cookieArray[i];\n        index = cookie.indexOf('=');\n        if (index > 0) {  // ignore nameless cookies\n          name = safeDecodeURIComponent(cookie.substring(0, index));\n          // the first value that is seen for a cookie is the most\n          // specific one.  values for the same cookie name that\n          // follow are for less specific paths.\n          if (isBlank((<any>lastCookies)[name])) {\n            (<any>lastCookies)[name] = safeDecodeURIComponent(cookie.substring(index + 1));\n          }\n        }\n      }\n    }\n    return lastCookies;\n  }\n\n  private _cookieWriter() {\n    const that = this;\n\n    return function (name: string, value: string, options?: CookieOptions) {\n      that.cookieString = that._buildCookieString(name, value, options);\n    };\n  }\n\n  private _buildCookieString(name: string, value: string, options?: CookieOptions): string {\n    const opts: CookieOptions = mergeOptions(this.options, options);\n    let expires: any = opts.expires;\n    if (isBlank(value)) {\n      expires = 'Thu, 01 Jan 1970 00:00:00 GMT';\n      value = '';\n    }\n    if (isString(expires)) {\n      expires = new Date(expires);\n    }\n    const cookieValue = opts.storeUnencoded ? value : encodeURIComponent(value);\n    let str = encodeURIComponent(name) + '=' + cookieValue;\n    str += opts.path ? ';path=' + opts.path : '';\n    str += opts.domain ? ';domain=' + opts.domain : '';\n    str += expires ? ';expires=' + expires.toUTCString() : '';\n    str += opts.secure ? ';secure' : '';\n    str += opts.httpOnly ? '; HttpOnly' : '';\n\n    // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\n    // - 300 cookies\n    // - 20 cookies per unique domain\n    // - 4096 bytes per cookie\n    const cookieLength = str.length + 1;\n    if (cookieLength > 4096) {\n      console.log(`Cookie \\'${name}\\' possibly not set or overflowed because it was too large (${cookieLength} > 4096 bytes)!`);\n    }\n    return str;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n\nimport { CookieService } from './cookie.service';\nimport { CookieOptionsProvider } from './cookie-options-provider';\nimport { CookieOptions } from './cookie-options.model';\n\n@Injectable()\nexport class CookieBackendService extends CookieService {\n  constructor(\n    @Inject(REQUEST) private request: any,\n    @Inject(RESPONSE) private response: any,\n    _optionsProvider: CookieOptionsProvider,\n  ) {\n    super(_optionsProvider);\n  }\n\n  protected get cookieString(): string {\n    return this.request.cookie || this.request.headers['cookie'] || '';\n  }\n\n  protected set cookieString(val: string) {\n    this.request.cookie = val;\n    this.response.cookie = val;\n  }\n\n  put(key: string, value: string, options: CookieOptions = {}): void {\n    let findKey = false;\n    let newCookie = Object.keys(this.getAll())\n      // tslint:disable-next-line: no-shadowed-variable\n      .map((keyItem) => {\n        if (keyItem === key) {\n          findKey = true;\n          return `${key}=${value}`;\n        }\n        return `${keyItem}=${this.get(keyItem)}`;\n      })\n      .join('; ');\n    if (!findKey) {\n      newCookie += `; ${key}=${value};`;\n    }\n    this.request.headers.cookie = newCookie;\n    // not sure\n    this.cookieString = newCookie;\n  }\n\n  remove(key: string, options?: CookieOptions): void {\n    const newCookie = Object.keys(this.getAll())\n      // tslint:disable-next-line: no-shadowed-variable\n      .map((keyItem) => {\n        if (keyItem === key) {\n          return '';\n        }\n        return `${keyItem}=${this.get(keyItem)}`;\n      })\n      .join('; ');\n    this.request.headers.cookie = newCookie;\n    // not sure\n    this.cookieString = newCookie;\n  }\n}\n","import { CookieService } from './cookie.service';\nimport { CookieOptionsProvider } from './cookie-options-provider';\n\nexport function cookieServiceFactory(cookieOptionsProvider: CookieOptionsProvider): CookieService {\n  return new CookieService(cookieOptionsProvider);\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CookieOptionsProvider, COOKIE_OPTIONS } from './cookie-options-provider';\nimport { CookieService } from './cookie.service';\nimport { CookieOptions } from './cookie-options.model';\nimport { cookieServiceFactory } from './cookie.factory';\n\n@NgModule({\n  providers: [CookieOptionsProvider]\n})\nexport class CookieModule {\n  /**\n   * Use this method in your root module to provide the CookieService\n   */\n  static forRoot(options: CookieOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: CookieModule,\n      providers: [\n        {provide: COOKIE_OPTIONS, useValue: options},\n        {provide: CookieService, useFactory: cookieServiceFactory, deps: [CookieOptionsProvider]}\n      ]\n    };\n  }\n\n  /**\n   * Use this method in your other (non root) modules to import the directive/pipe\n   */\n  static forChild(options: CookieOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: CookieModule,\n      providers: [\n        {provide: COOKIE_OPTIONS, useValue: options},\n        {provide: CookieService, useFactory: cookieServiceFactory, deps: [CookieOptionsProvider]}\n      ]\n    };\n  }\n}\n","// https://github.com/angular/angular/issues/15776#issuecomment-291862953\n\nimport { Injectable, Optional, RendererFactory2, ViewEncapsulation, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\n/* \n * -- LinkService --        [Temporary]\n * @MarkPieszak\n * \n * Similar to Meta service but made to handle <link> creation for SEO purposes\n * -- NOTE: Soon there will be an overall DocumentService within Angular that handles Meta/Link everything\n */\n\n@Injectable()\nexport class LinkService {\n\n    constructor(\n        private rendererFactory: RendererFactory2,\n        @Inject(DOCUMENT) private document\n    ) {\n    }\n\n    /**\n     * Inject the State into the bottom of the <head>\n     */\n    addTag(tag: LinkDefinition, forceCreation?: boolean) {\n\n        try {\n            const renderer = this.rendererFactory.createRenderer(this.document, {\n                id: '-1',\n                encapsulation: ViewEncapsulation.None,\n                styles: [],\n                data: {}\n            });\n\n            const link = renderer.createElement('link');\n            const head = this.document.head;\n            const selector = this._parseSelector(tag);\n\n            if (head === null) {\n                throw new Error('<head> not found within DOCUMENT.');\n            }\n\n            Object.keys(tag).forEach((prop: string) => {\n                return renderer.setAttribute(link, prop, tag[prop]);\n            });\n\n            // [TODO]: get them to update the existing one (if it exists) ?\n            renderer.appendChild(head, link);\n\n        } catch (e) {\n            console.error('Error within linkService : ', e);\n        }\n    }\n\n    private _parseSelector(tag: LinkDefinition): string {\n        // Possibly re-work this\n        const attr: string = tag.rel ? 'rel' : 'hreflang';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n}\n\nexport declare type LinkDefinition = {\n    charset?: string;\n    crossorigin?: string;\n    href?: string;\n    hreflang?: string;\n    media?: string;\n    rel?: string;\n    rev?: string;\n    sizes?: string;\n    target?: string;\n    type?: string;\n} & {\n        [prop: string]: string;\n    };","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LinkService } from './link.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [LinkService]\n})\nexport class LinkModule { }\n"]}