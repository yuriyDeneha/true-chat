{"version":3,"sources":["modules/common/common.umd.js"],"names":["global","factory","exports","module","require","define","amd","nguniversal","common","tslib","ng","http","core","platformBrowser","rxjs","operators","this","tslib_1","TransferHttpCacheInterceptor","appRef","transferState","_this","isCacheActive","isStable","pipe","filter","take","toPromise","then","prototype","invalidateCacheEntry","url","Object","keys","forEach","key","includes","remove","makeStateKey","makeCacheKey","method","params","encodedParams","sort","map","k","get","join","intercept","req","next","handle","storeKey","hasKey","response","of","HttpResponse","body","headers","HttpHeaders","status","statusText","tap","event","set","getHeadersMap","e_1","_a","headersMap","_b","__values","_c","done","value","getAll","e_1_1","error","return","call","__decorate","Injectable","__metadata","ApplicationRef","TransferState","TransferHttpCacheModule","NgModule","imports","BrowserTransferStateModule","providers","provide","HTTP_INTERCEPTORS","useExisting","multi","domContentLoadedFactory","doc","Promise","resolve","_reject","contentLoaded","removeEventListener","readyState","addEventListener","StateTransferInitializerModule","APP_INITIALIZER","useFactory","deps","DOCUMENT","ɵnguniversal_modules_common_common_a","ɵTransferHttpCacheInterceptor","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/common/http'), require('@angular/core'), require('@angular/platform-browser'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :\n    typeof define === 'function' && define.amd ? define('@nguniversal/common', ['exports', 'tslib', '@angular/common/http', '@angular/core', '@angular/platform-browser', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :\n    (factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = {}),global.tslib,global.ng.common.http,global.ng.core,global.ng.platformBrowser,global.rxjs,global.rxjs.operators,global.ng.common));\n}(this, (function (exports,tslib_1,http,core,platformBrowser,rxjs,operators,common) { 'use strict';\n\n    function getHeadersMap(headers) {\n        var e_1, _a;\n        var headersMap = {};\n        try {\n            for (var _b = tslib_1.__values(headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                headersMap[key] = headers.getAll(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return headersMap;\n    }\n    var TransferHttpCacheInterceptor = /** @class */ (function () {\n        function TransferHttpCacheInterceptor(appRef, transferState) {\n            var _this = this;\n            this.transferState = transferState;\n            this.isCacheActive = true;\n            // Stop using the cache if the application has stabilized, indicating initial rendering is\n            // complete.\n            appRef.isStable\n                .pipe(operators.filter(function (isStable) { return isStable; }), operators.take(1)).toPromise()\n                .then(function () { _this.isCacheActive = false; });\n        }\n        TransferHttpCacheInterceptor.prototype.invalidateCacheEntry = function (url) {\n            var _this = this;\n            Object.keys(this.transferState['store'])\n                .forEach(function (key) { return key.includes(url) ? _this.transferState.remove(platformBrowser.makeStateKey(key)) : null; });\n        };\n        TransferHttpCacheInterceptor.prototype.makeCacheKey = function (method, url, params) {\n            // make the params encoded same as a url so it's easy to identify\n            var encodedParams = params.keys().sort().map(function (k) { return k + \"=\" + params.get(k); }).join('&');\n            var key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n            return platformBrowser.makeStateKey(key);\n        };\n        TransferHttpCacheInterceptor.prototype.intercept = function (req, next) {\n            var _this = this;\n            // Stop using the cache if there is a mutating call.\n            if (req.method !== 'GET' && req.method !== 'HEAD') {\n                this.isCacheActive = false;\n                this.invalidateCacheEntry(req.url);\n            }\n            if (!this.isCacheActive) {\n                // Cache is no longer active. Pass the request through.\n                return next.handle(req);\n            }\n            var storeKey = this.makeCacheKey(req.method, req.url, req.params);\n            if (this.transferState.hasKey(storeKey)) {\n                // Request found in cache. Respond using it.\n                var response = this.transferState.get(storeKey, {});\n                return rxjs.of(new http.HttpResponse({\n                    body: response.body,\n                    headers: new http.HttpHeaders(response.headers),\n                    status: response.status,\n                    statusText: response.statusText,\n                    url: response.url,\n                }));\n            }\n            else {\n                // Request not found in cache. Make the request and cache it.\n                var httpEvent = next.handle(req);\n                return httpEvent\n                    .pipe(operators.tap(function (event) {\n                    if (event instanceof http.HttpResponse) {\n                        _this.transferState.set(storeKey, {\n                            body: event.body,\n                            headers: getHeadersMap(event.headers),\n                            status: event.status,\n                            statusText: event.statusText,\n                            url: event.url,\n                        });\n                    }\n                }));\n            }\n        };\n        TransferHttpCacheInterceptor = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__metadata(\"design:paramtypes\", [core.ApplicationRef, platformBrowser.TransferState])\n        ], TransferHttpCacheInterceptor);\n        return TransferHttpCacheInterceptor;\n    }());\n    /**\n     * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n     * calls from the server to the client application.\n     */\n    var TransferHttpCacheModule = /** @class */ (function () {\n        function TransferHttpCacheModule() {\n        }\n        TransferHttpCacheModule = tslib_1.__decorate([\n            core.NgModule({\n                imports: [platformBrowser.BrowserTransferStateModule],\n                providers: [\n                    TransferHttpCacheInterceptor,\n                    { provide: http.HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n                ],\n            })\n        ], TransferHttpCacheModule);\n        return TransferHttpCacheModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function domContentLoadedFactory(doc) {\n        return function () { return new Promise(function (resolve, _reject) {\n            var contentLoaded = function () {\n                doc.removeEventListener('DOMContentLoaded', contentLoaded);\n                resolve();\n            };\n            if (doc.readyState === 'complete' || doc.readyState === 'interactive') {\n                resolve();\n            }\n            else {\n                doc.addEventListener('DOMContentLoaded', contentLoaded);\n            }\n        }); };\n    }\n    var StateTransferInitializerModule = /** @class */ (function () {\n        function StateTransferInitializerModule() {\n        }\n        StateTransferInitializerModule = tslib_1.__decorate([\n            core.NgModule({\n                providers: [\n                    { provide: core.APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [common.DOCUMENT] },\n                ]\n            })\n        ], StateTransferInitializerModule);\n        return StateTransferInitializerModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵnguniversal_modules_common_common_a = domContentLoadedFactory;\n    exports.TransferHttpCacheModule = TransferHttpCacheModule;\n    exports.StateTransferInitializerModule = StateTransferInitializerModule;\n    exports.ɵTransferHttpCacheInterceptor = TransferHttpCacheInterceptor;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common.umd.js.map\n"]}